<%- include('partials/header') %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.css">

<div class="admin-section">
    <h2>QU·∫¢N TR·ªä</h2>
    <div class="admin-container">
        <div class="sidebar">
            <ul>
                <li class="active">
                    <span class="icon">üì¶</span>
                    <a href="#products" onclick="showSection('products')">Qu·∫£n l√Ω s·∫£n ph·∫©m</a>
                </li>
                <li>
                    <span class="icon">üìã</span>
                    <a href="#orders" onclick="showSection('orders')">Qu·∫£n l√Ω ƒë∆°n h√†ng</a>
                </li>
                <li>
                    <span class="icon">üë•</span>
                    <a href="#users" onclick="showSection('users')">Qu·∫£n l√Ω ng∆∞·ªùi d√πng</a>
                </li>
            </ul>
        </div>
        <div class="content">
            <!-- Qu·∫£n l√Ω s·∫£n ph·∫©m -->
            <div id="products" class="content-section active">
                <h3>QU·∫¢N L√ù S·∫¢N PH·∫®M</h3>
                <button class="add-button" onclick="showAddProductForm()">Th√™m s·∫£n ph·∫©m</button>
                <div id="add-product-form" style="display: none;">
                    <h4>Th√™m s·∫£n ph·∫©m m·ªõi</h4>
                    <form action="/admin/product" method="POST" id="product-form">
                        <div class="info-field">
                            <label>T√™n s·∫£n ph·∫©m <span style="color: red;">*</span></label>
                            <input type="text" name="name" required>
                        </div>
                        <div class="info-field">
                            <label>Gi√° <span style="color: red;">*</span></label>
                            <input type="number" name="price" min="1" required>
                        </div>
                        <div class="info-field">
                            <label>S·ªë l∆∞·ª£ng <span style="color: red;">*</span></label>
                            <input type="number" name="quantity" min="0" required>
                        </div>
                        <div class="info-field">
                            <label>M√¥ t·∫£</label>
                            <textarea name="description"></textarea>
                        </div>
                        <div class="info-field">
                            <label>Danh m·ª•c <span style="color: red;">*</span></label>
                            <select name="categoryId" required>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category.id %>"><%= category.name %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="info-field">
                            <label>·∫¢nh (URL) <span style="color: red;">*</span></label>
                            <input type="url" name="image" placeholder="Nh·∫≠p URL ·∫£nh (jpg, jpeg, png, webp)" required>
                            <div id="image-preview"></div>
                        </div>
                        <button type="button" class="cancel-button" onclick="document.getElementById('add-product-form').style.display = 'none';">H·ªßy</button>
                        <button type="submit" class="save-button">L∆∞u s·∫£n ph·∫©m</button>
                    </form>
                </div>
                <div class="product-list">
                    <% if (products && products.length > 0) { %>
                        <table>
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>T√™n</th>
                                    <th>Gi√°</th>
                                    <th>S·ªë l∆∞·ª£ng</th>
                                    <th>Thao t√°c</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% products.forEach(product => { %>
                                    <tr>
                                        <td><%= product.id %></td>
                                        <td><%= product.name %></td>
                                        <td><%= product.price.toLocaleString('vi-VN') %>ƒë</td>
                                        <td><%= product.quantity %></td>
                                        <td>
                                            <button class="edit-button" onclick="editProduct(<%= product.id %>)">S·ª≠a</button>
                                            <button class="remove-button" onclick="deleteProduct(<%= product.id %>)">X√≥a</button>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    <% } else { %>
                        <p>Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o.</p>
                    <% } %>
                </div>
            </div>
            <!-- Qu·∫£n l√Ω ƒë∆°n h√†ng -->
            <div id="orders" class="content-section">
                <h3>QU·∫¢N L√ù ƒê∆†N H√ÄNG</h3>
                <% if (orders && orders.length > 0) { %>
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>T·ªïng gi√°</th>
                                <th>Tr·∫°ng th√°i</th>
                                <th>Ng√†y t·∫°o</th>
                                <th>Thao t√°c</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orders.forEach(order => { %>
                                <tr id="order-<%= order.id %>">
                                    <td>#<%= order.id %></td>
                                    <td><%= order.total_price.toLocaleString('vi-VN') %>ƒë</td>
                                    <td>
                                        <select id="status-<%= order.id %>" onchange="updateOrderStatus(<%= order.id %>)" data-original-status="<%= order.status %>">
                                            <option value="PENDING" <%= order.status === 'PENDING' ? 'selected' : '' %>>Ch·ªù x·ª≠ l√Ω</option>
                                            <option value="PREPARED" <%= order.status === 'PREPARED' ? 'selected' : '' %>>ƒê√£ chu·∫©n b·ªã</option>
                                            <option value="SHIPPED" <%= order.status === 'SHIPPED' ? 'selected' : '' %>>ƒê√£ giao h√†ng</option>
                                            <option value="DELIVERED" <%= order.status === 'DELIVERED' ? 'selected' : '' %>>Ho√†n th√†nh</option>
                                            <option value="CANCELLED" <%= order.status === 'CANCELLED' ? 'selected' : '' %>>ƒê√£ h·ªßy</option>
                                        </select>
                                    </td>
                                    <td><%= new Date(order.create_at).toLocaleDateString('vi-VN') %></td>
                                    <td>
                                        <a href="/order/<%= order.id %>" class="view-button">Xem</a>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                <% } else { %>
                    <p>Ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>
                <% } %>
            </div>
            <!-- Qu·∫£n l√Ω ng∆∞·ªùi d√πng -->
            <div id="users" class="content-section">
                <h3>QU·∫¢N L√ù NG∆Ø·ªúI D√ôNG</h3>
                <% if (users && users.length > 0) { %>
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>T√™n</th>
                                <th>Email</th>
                                <th>Vai tr√≤</th>
                                <th>Thao t√°c</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% users.forEach(user => { %>
                                <tr>
                                    <td><%= user.id %></td>
                                    <td><%= user.user_name %></td>
                                    <td><%= user.email %></td>
                                    <td><%= user.role %></td>
                                    <td>
                                        <button class="edit-button" onclick="editUser(<%= user.id %>)">S·ª≠a</button>
                                        <button class="remove-button" onclick="deleteUser(<%= user.id %>)">X√≥a</button>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                <% } else { %>
                    <p>Ch∆∞a c√≥ ng∆∞·ªùi d√πng n√†o.</p>
                <% } %>
            </div>
        </div>
    </div>
</div>

<script>
async function updateOrderStatus(orderId) {
    const select = document.getElementById(`status-${orderId}`);
    const newStatus = select.value;
    const originalStatus = select.dataset.originalStatus;
    select.disabled = true;

    try {
        const response = await fetch(`/order/${orderId}/status`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ status: newStatus }),
        });

        if (response.ok) {
            Toastify({
                text: 'C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng!',
                style: { background: '#28a745' },
                duration: 3000,
            }).showToast();
            setTimeout(() => window.location.reload(), 3000);
        } else {
            const errorText = await response.text();
            Toastify({
                text: errorText || 'L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i.',
                style: { background: '#dc3545' },
                duration: 3000,
            }).showToast();
            select.value = originalStatus;
        }
    } catch (err) {
        Toastify({
            text: 'Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.',
            style: { background: '#dc3545' },
            duration: 3000,
        }).showToast();
        select.value = originalStatus;
    } finally {
        select.disabled = false;
    }
}

function showSection(sectionId) {
    document.querySelectorAll('.content-section').forEach(section => {
        section.classList.remove('active');
    });
    document.querySelectorAll('.sidebar li').forEach(li => {
        li.classList.remove('active');
    });
    document.getElementById(sectionId).classList.add('active');
    document.querySelector(`.sidebar a[href="#${sectionId}"]`).parentElement.classList.add('active');
}

function showAddProductForm() {
    document.getElementById('add-product-form').style.display = 'block';
}

function updateImagePreview() {
    const preview = document.getElementById('image-preview');
    preview.innerHTML = '';
    const input = document.querySelector('input[name="image"]');
    if (input.value) {
        const img = document.createElement('img');
        img.src = input.value;
        img.style.width = '100px';
        img.style.height = '100px';
        img.style.objectFit = 'cover';
        img.style.margin = '5px';
        img.onerror = () => { img.src = 'https://via.placeholder.com/100?text=Invalid+URL'; };
        preview.appendChild(img);
    }
}

async function editProduct(productId) {
    try {
        const response = await fetch(`/admin/product/${productId}/edit`);
        if (response.status === 401) {
            Toastify({
                text: 'Phi√™n ƒëƒÉng nh·∫≠p h·∫øt h·∫°n. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.',
                style: { background: '#dc3545' },
                duration: 3000,
            }).showToast();
            setTimeout(() => window.location.href = '/auth/login', 3000);
            return;
        } else if (response.ok) {
            window.location.href = `/admin/product/${productId}/edit`;
        } else {
            const errorText = await response.text();
            Toastify({
                text: errorText || 'Kh√¥ng th·ªÉ t·∫£i trang ch·ªânh s·ª≠a s·∫£n ph·∫©m.',
                style: { background: '#dc3545' },
                duration: 3000,
            }).showToast();
        }
    } catch (err) {
        Toastify({
            text: err.message || 'Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.',
            style: { background: '#dc3545' },
            duration: 3000,
        }).showToast();
    }
}

async function deleteProduct(productId) {
    if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y?')) {
        try {
            const response = await fetch(`/admin/product/${productId}`, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
            });
            if (response.ok) {
                Toastify({
                    text: 'X√≥a s·∫£n ph·∫©m th√†nh c√¥ng!',
                    style: { background: '#28a745' },
                    duration: 3000,
                }).showToast();
                setTimeout(() => window.location.reload(), 3000);
            } else {
                const errorText = await response.text();
                Toastify({
                    text: errorText || 'L·ªói khi x√≥a s·∫£n ph·∫©m.',
                    style: { background: '#dc3545' },
                    duration: 3000,
                }).showToast();
            }
        } catch (err) {
            Toastify({
                text: 'Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.',
                style: { background: '#dc3545' },
                duration: 3000,
            }).showToast();
        }
    }
}

async function editUser(userId) {
    alert(`Ch·ªânh s·ª≠a ng∆∞·ªùi d√πng ${userId} - Ch·ª©c nƒÉng n√†y c·∫ßn ƒë∆∞·ª£c tri·ªÉn khai th√™m!`);
}

async function deleteUser(userId) {
    if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y?')) {
        try {
            const response = await fetch(`/admin/user/${userId}`, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
            });
            if (response.ok) {
                Toastify({
                    text: 'X√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng!',
                    style: { background: '#28a745' },
                    duration: 3000,
                }).showToast();
                setTimeout(() => window.location.reload(), 3000);
            } else {
                const errorText = await response.text();
                Toastify({
                    text: errorText || 'L·ªói khi x√≥a ng∆∞·ªùi d√πng.',
                    style: { background: '#dc3545' },
                    duration: 3000,
                }).showToast();
            }
        } catch (err) {
            Toastify({
                text: 'Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.',
                style: { background: '#dc3545' },
                duration: 3000,
            }).showToast();
        }
    }
}

document.getElementById('product-form')?.addEventListener('submit', async function(e) {
    e.preventDefault();
    const form = e.target;

    // Validation
    const name = form.name.value.trim();
    const price = Number(form.price.value);
    const quantity = Number(form.quantity.value);
    const description = form.description.value.trim();
    const categoryId = Number(form.categoryId.value);
    const image = form.image.value.trim();

    // Validate name
    if (name.length < 3) {
        Toastify({
            text: 'T√™n s·∫£n ph·∫©m ph·∫£i c√≥ √≠t nh·∫•t 3 k√Ω t·ª±.',
            style: { background: '#dc3545' },
            duration: 3000,
        }).showToast();
        return;
    }

    // Validate price
    if (isNaN(price) || price < 1) {
        Toastify({
            text: 'Gi√° ph·∫£i l√† s·ªë v√† l·ªõn h∆°n ho·∫∑c b·∫±ng 1.',
            style: { background: '#dc3545' },
            duration: 3000,
        }).showToast();
        return;
    }

    // Validate quantity
    if (isNaN(quantity) || quantity < 0) {
        Toastify({
            text: 'S·ªë l∆∞·ª£ng ph·∫£i l√† s·ªë v√† l·ªõn h∆°n ho·∫∑c b·∫±ng 0.',
            style: { background: '#dc3545' },
            duration: 3000,
        }).showToast();
        return;
    }

    // Validate image
    const validImageFormats = /\.(jpg|jpeg|png|webp)$/i;
    if (!image || !validImageFormats.test(image)) {
        Toastify({
            text: 'URL ·∫£nh kh√¥ng h·ª£p l·ªá. Ch·ªâ h·ªó tr·ª£ jpg, jpeg, png, webp.',
            style: { background: '#dc3545' },
            duration: 3000,
        }).showToast();
        return;
    }

    // Validate categoryId
    if (isNaN(categoryId)) {
        Toastify({
            text: 'Vui l√≤ng ch·ªçn danh m·ª•c h·ª£p l·ªá.',
            style: { background: '#dc3545' },
            duration: 3000,
        }).showToast();
        return;
    }

    const data = {
        name,
        price,
        quantity,
        description,
        categoryId,
        image
    };

    try {
        const response = await fetch('/admin/product', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        });
        if (response.status === 401) {
            Toastify({
                text: 'Phi√™n ƒëƒÉng nh·∫≠p h·∫øt h·∫°n. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.',
                style: { background: '#dc3545' },
                duration: 3000,
            }).showToast();
            setTimeout(() => window.location.href = '/auth/login', 3000);
            return;
        }
        if (response.ok) {
            Toastify({
                text: 'Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!',
                style: { background: '#28a745' },
                duration: 3000,
            }).showToast();
            setTimeout(() => window.location.reload(), 3000);
        } else {
            const errorText = await response.text();
            Toastify({
                text: errorText || 'L·ªói khi th√™m s·∫£n ph·∫©m.',
                style: { background: '#dc3545' },
                duration: 3000,
            }).showToast();
        }
    } catch (err) {
        Toastify({
            text: 'Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.',
            style: { background: '#dc3545' },
            duration: 3000,
        }).showToast();
    }
});

// Add event listener for image input to update preview
document.querySelector('input[name="image"]')?.addEventListener('input', updateImagePreview);
</script>

<style>
.admin-section {
    padding: 50px 40px;
    background-color: #fff;
    min-height: calc(100vh - 200px);
}
.admin-container {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    gap: 40px;
    flex-wrap: wrap;
}
.sidebar {
    flex: 0 0 250px;
    background-color: #f5f5f5;
    padding: 20px;
    border-radius: 10px;
}
.content {
    flex: 1;
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}
.content-section {
    display: none;
}
.content-section.active {
    display: block;
}
.add-button, .edit-button, .view-button {
    padding: 8px 15px;
    background-color: #28a745;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    text-transform: uppercase;
}
.add-button:hover, .edit-button:hover, .view-button:hover {
    background-color: #218838;
}
.remove-button {
    padding: 8px 15px;
    background-color: #dc3545;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    text-transform: uppercase;
}
.remove-button:hover {
    background-color: #c82333;
}
.cancel-button {
    padding: 8px 15px;
    background-color: #6c757d;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    text-transform: uppercase;
    margin-right: 10px;
}
.cancel-button:hover {
    background-color: #5a6268;
}
.save-button {
    padding: 8px 15px;
    background-color: #28a745;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    text-transform: uppercase;
}
.save-button:hover {
    background-color: #218838;
}
table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}
th, td {
    padding: 10px;
    border: 1px solid #ddd;
    text-align: left;
}
th {
    background-color: #f5f5f5;
}
.info-field {
    margin-bottom: 20px;
}
.info-field label {
    display: block;
    font-weight: bold;
    margin-bottom: 5px;
}
.info-field input, .info-field textarea, .info-field select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 14px;
}
.info-field textarea {
    height: 100px;
    resize: vertical;
}
#image-preview {
    margin-top: 10px;
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}
</style>

<%- include('partials/footer') %>